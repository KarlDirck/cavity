<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         ToolsVersion="4.0">

  <Import Project="$(MSBuildProjectDirectory)\lib\trove\Framework\v2.0\xunit.runner.msbuild.tasks.targets" />
  <Import Project="$(MSBuildProjectDirectory)\lib\trove\Framework\v2.0\MSBuild.Community.Tasks.Targets" />
  <Import Project="$(MSBuildProjectDirectory)\lib\trove\Framework\v3.5\MSBuild.ExtensionPack.tasks" />
  <Import Project="$(MSBuildProjectDirectory)\lib\trove\Framework\$(TargetFrameworkVersion)\Cavity.Build.Tasks.Targets" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' " />

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)'==''">Release</Configuration>
    <Version Condition="'$(Version)'==''">1.0.0</Version>
    <Revision>0</Revision>
    <BuildName>$(Configuration) $(TargetFrameworkVersion)</BuildName>
  </PropertyGroup>

  <Target Name="Run">
    <CallTarget Targets="Compliance" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' " />
    <CallTarget Targets="Clean" />
    <CallTarget Targets="Versioning" />
    <CallTarget Targets="Build" />
    <!-- CallTarget Targets="Deploy" Condition="'$(registry:HKEY_LOCAL_MACHINE\Software\Microsoft\InetStp@MajorVersion)'=='7'" / -->
    <CallTarget Targets="Test" />
  </Target>

  <ItemGroup>
    <CSharpProjectFiles Include="$(MSBuildProjectDirectory)\src\ClassLibraries\**\*.csproj" />
    <CSharpProjectFiles Include="$(MSBuildProjectDirectory)\src\ConsoleApplications\**\*.csproj" />
    <CSharpProjectFiles Include="$(MSBuildProjectDirectory)\src\WindowsServices\**\*.csproj" />
  </ItemGroup>

  <Target Name="Compliance">
    <CallTarget Targets="Compliance : Project" />
    <CallTarget Targets="Compliance : Project Debug" />
    <CallTarget Targets="Compliance : Project Release" />
    <CallTarget Targets="Compliance : Project Targeting" />
    <CallTarget Targets="Compliance : Conditional references" />
  </Target>

  <PropertyGroup>
    <WhenNotNet20XPath>/b:Project/b:Choose/b:When[@Condition=%22 %27%24(TargetFrameworkVersion)%27 != %27v2.0%27 %22]</WhenNotNet20XPath>
    <ProjectDebugXPath>/b:Project/b:PropertyGroup[@Condition=%22 %27%24(Configuration)|%24(Platform)%27 == %27Debug|AnyCPU%27 %22 or @Condition=%22 %27%24(Configuration)|%24(Platform)%27 == %27Debug|x86%27 %22]</ProjectDebugXPath>
    <ProjectReleaseXPath>/b:Project/b:PropertyGroup[@Condition=%22 %27%24(Configuration)|%24(Platform)%27 == %27Release|AnyCPU%27 %22 or @Condition=%22 %27%24(Configuration)|%24(Platform)%27 == %27Release|x86%27 %22]</ProjectReleaseXPath>
  </PropertyGroup>

  <Target Name="Compliance : Project">
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:AppDesignerFolder[text()='Properties'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:AssemblyName[text()])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:AssemblyOriginatorKeyFile[text()='..\..\Cavity.snk'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:CodeAnalysisRuleSet[text()='..\..\Cavity.ruleset' or text()='..\..\Cavity.Facts.ruleset'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:Configuration[@Condition=%22 %27%24(Configuration)%27 == %27%27 %22][text()='Debug'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:ErrorReport[text()='prompt'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:FileAlignment[text()='512'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:OutputPath[text()='bin\%24(Configuration) %24(TargetFrameworkVersion)\'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:OutputType[text()])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:Platform[@Condition=%22 %27%24(Platform)%27 == %27%27 %22][text()='AnyCPU' or text()='x86'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:ProjectGuid[text()])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:ProductVersion[text()])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:RootNamespace[text()='Cavity' or text()='Example'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:RunCodeAnalysis[text()='true'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:SchemaVersion[text()])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:SignAssembly[text()])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:StyleCopTreatErrorsAsWarnings[text()='false'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:TargetFrameworkProfile)" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:TargetFrameworkVersion[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27%27 %22][text()='v4.0'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:TreatWarningsAsErrors[text()='true'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(//b:PropertyGroup[not(@Condition)]/b:WarningLevel[text()='4'])" />
  </Target>

  <Target Name="Compliance : Project Debug">
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="4=count($(ProjectDebugXPath)/*)" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count($(ProjectDebugXPath)/b:DebugSymbols[text()='true'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count($(ProjectDebugXPath)/b:DebugType[text()='full'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count($(ProjectDebugXPath)/b:DefineConstants[text()='TRACE;DEBUG'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count($(ProjectDebugXPath)/b:Optimize[text()='false'])" />
  </Target>

  <Target Name="Compliance : Project Release">
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="3=count($(ProjectReleaseXPath)/*)" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count($(ProjectReleaseXPath)/b:DebugType[text()='pdbonly'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count($(ProjectReleaseXPath)/b:DefineConstants[text()='TRACE'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count($(ProjectReleaseXPath)/b:Optimize[text()='true'])" />
  </Target>

  <Target Name="Compliance : Project Targeting">
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="2=count(/b:Project/b:PropertyGroup[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27v2.0%27 %22]/*)" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(/b:Project/b:PropertyGroup[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27v2.0%27 %22]/b:DefineConstants[text()='NET20'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(/b:Project/b:PropertyGroup[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27v2.0%27 %22]/b:TargetFrameworkVersionNumber[text()='2.0'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="2=count(/b:Project/b:PropertyGroup[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27v3.5%27 %22]/*)" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(/b:Project/b:PropertyGroup[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27v3.5%27 %22]/b:DefineConstants[text()='NET35'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(/b:Project/b:PropertyGroup[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27v3.5%27 %22]/b:TargetFrameworkVersionNumber[text()='3.5'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="2=count(/b:Project/b:PropertyGroup[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27v4.0%27 %22]/*)" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(/b:Project/b:PropertyGroup[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27v4.0%27 %22]/b:DefineConstants[text()='NET40'])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="1=count(/b:Project/b:PropertyGroup[@Condition=%22 %27%24(TargetFrameworkVersion)%27 == %27v4.0%27 %22]/b:TargetFrameworkVersionNumber[text()='4.0'])" />
  </Target>

  <Target Name="Compliance : Conditional references">
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='System.Core'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='System.Data.DataSetExtensions'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='System.Numerics'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='System.Xml.Linq'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Autofac'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Autofac.Configuration'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='AutofacContrib.CommonServiceLocator'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Castle.Core'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Castle.DynamicProxy2'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Castle.MicroKernel'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Castle.Windsor'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Microsoft.CSharp'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Microsoft.Practices.Unity'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Microsoft.Practices.Unity.Configuration'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='Moq'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='StructureMap'][not(@Condition)])" />
    <Cavity.Build.CSharpProjectCompliance Projects="@(CSharpProjectFiles)"
                                          XPath="0=count(//b:ItemGroup/b:Reference[@Include='StructureMapAdapter'][not(@Condition)])" />
  </Target>

  <Target Name="Clean">
    <ItemGroup>
      <CsProjUserFiles Include="$(MSBuildProjectDirectory)\**\*.csproj.user" />
      <CsProjVs10xFiles Include="$(MSBuildProjectDirectory)\**\*.csproj.vs10x" />
      <ResharperUserFiles Include="$(MSBuildProjectDirectory)\**\*.Resharper.user" />
      <TeamCityUserFiles Include="$(MSBuildProjectDirectory)\**\*.TeamCity.user" />
    </ItemGroup>
    <Delete Files="@(CsProjUserFiles)" />
    <Delete Files="@(CsProjVs10xFiles)" />
    <Delete Files="@(ResharperUserFiles)" />
    <Delete Files="@(TeamCityUserFiles)" />
    <MSBuild Projects="$(MSBuildProjectDirectory)\src\Cavity.sln"
             Targets="Clean"
             Properties="Configuration=$(Configuration)" />
  </Target>

  <Target Name="Versioning"
          Condition="'$(Versioning)'=='Subversion'">
    <MSBuild.Community.Tasks.Subversion.SvnVersion LocalPath=".">
      <Output TaskParameter="Revision"
              PropertyName="Revision" />
    </MSBuild.Community.Tasks.Subversion.SvnVersion>
    <AssemblyInfo CodeLanguage="CS"
                  OutputFile="$(MSBuildProjectDirectory)\src\Build.cs"
                  AssemblyVersion="$(Version).$(Revision)"
                  AssemblyFileVersion="$(Version).$(Revision)"
                  AssemblyInformationalVersion="$(Version).$(Revision)" />
  </Target>

  <Target Name="Build">
    <MSBuild Projects="$(MSBuildProjectDirectory)\src\Cavity.sln"
             Targets="Rebuild"
             Properties="Configuration=$(Configuration)">
      <Output TaskParameter="TargetOutputs"
              ItemName="CodeAssemblies" />
    </MSBuild>
  </Target>

  <PropertyGroup>
    <WebApplicationName>cavity.example.net</WebApplicationName>
    <WebApplicationPath>$(MSBuildProjectDirectory)\src\WebApplications\Http.Client.Server</WebApplicationPath>
  </PropertyGroup>

  <Target Name="Deploy">
    <ItemGroup>
      <WebApplication Include="/">
        <PhysicalPath>$(WebApplicationPath)</PhysicalPath>
      </WebApplication>
    </ItemGroup>
    <MSBuild.ExtensionPack.Web.Iis7Website TaskAction="CheckExists"
                                           Name="$(WebApplicationName)">
      <Output TaskParameter="Exists"
              PropertyName="WebApplicationExists" />
    </MSBuild.ExtensionPack.Web.Iis7Website>
    <MSBuild.ExtensionPack.Web.Iis7Website TaskAction="Create"
                                           Name="$(WebApplicationName)"
                                           Path="$(WebApplicationPath)"
                                           Port="80"
                                           AppPool="ASP.NET v4.0"
                                           Condition="'$(WebApplicationExists)'=='False'" />
    <MSBuild.ExtensionPack.Web.Iis7Binding TaskAction="Remove"
                                           Name="$(WebApplicationName)"
                                           BindingInformation="*:80:"
                                           BindingProtocol="http" />
    <MSBuild.ExtensionPack.Web.Iis7Binding TaskAction="Add"
                                           Name="$(WebApplicationName)"
                                           BindingInformation="127.0.0.127:80:$(WebApplicationName)"
                                           BindingProtocol="http"
                                           Condition="'$(WebApplicationExists)'=='False'" />
    <MSBuild.Community.Tasks.Sleep Milliseconds="3000" />
    <MSBuild.ExtensionPack.Web.Iis7Website TaskAction="Stop"
                                           Name="$(WebApplicationName)" />
    <MSBuild.Community.Tasks.Sleep Milliseconds="3000" />
    <MSBuild.ExtensionPack.Web.Iis7Website TaskAction="Start"
                                           Name="$(WebApplicationName)" />
  </Target>

  <PropertyGroup>
    <TestResultsDirectory>$(MSBuildProjectDirectory)\TestResults</TestResultsDirectory>
    <ClassLibrariesPath>$(MSBuildProjectDirectory)\src\ClassLibraries</ClassLibrariesPath>
    <ConsoleApplicationsPath>$(MSBuildProjectDirectory)\src\ConsoleApplications</ConsoleApplicationsPath>
  </PropertyGroup>

  <Target Name="Test"
          Condition=" '$(TargetFrameworkVersion)' == 'v3.5' Or '$(TargetFrameworkVersion)' == 'v4.0' ">
    <RemoveDir Directories="$(TestResultsDirectory)"
               Condition="Exists('$(TestResultsDirectory)')" />
    <MakeDir Directories="$(TestResultsDirectory)"
             Condition="!Exists('$(TestResultsDirectory)')" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Build.Tasks.Facts\bin\$(BuildName)\Cavity.Build.Tasks.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Build.Tasks.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\build_tasks_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Core.Facts\bin\$(BuildName)\Cavity.Core.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Core.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\core_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Domain.Facts\bin\$(BuildName)\Cavity.Domain.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Domain.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\domain_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Http.Client.Facts\bin\$(BuildName)\Cavity.Http.Client.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Http.Client.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\http_client_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.Facts\bin\$(BuildName)\Cavity.ServiceLocation.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.Autofac.Facts\bin\$(BuildName)\Cavity.ServiceLocation.Autofac.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.Autofac.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_autofac_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.CastleWindsor.Facts\bin\$(BuildName)\Cavity.ServiceLocation.CastleWindsor.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.CastleWindsor.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_castle_windsor_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.StructureMap.Facts\bin\$(BuildName)\Cavity.ServiceLocation.StructureMap.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.StructureMap.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_structuremap_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.Unity.Facts\bin\$(BuildName)\Cavity.ServiceLocation.Unity.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.Unity.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_unity_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Testing.Http.Facts\bin\$(BuildName)\Cavity.Testing.Http.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Testing.Http.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\testing_http_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Testing.Unit.Facts\bin\$(BuildName)\Cavity.Testing.Unit.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Testing.Unit.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\testing_unit_facts_xunit.xml" />
    <Exec Command="Example.Autofac.Console.exe"
          WorkingDirectory="$(ConsoleApplicationsPath)\Example.Autofac.Console\bin\$(BuildName)" />
    <Exec Command="Example.CastleWindsor.Console.exe"
          WorkingDirectory="$(ConsoleApplicationsPath)\Example.CastleWindsor.Console\bin\$(BuildName)" />
    <Exec Command="Example.StructureMap.Console.exe"
          WorkingDirectory="$(ConsoleApplicationsPath)\Example.StructureMap.Console\bin\$(BuildName)" />
    <Exec Command="Example.Unity.Console.exe"
          WorkingDirectory="$(ConsoleApplicationsPath)\Example.Unity.Console\bin\$(BuildName)" />
    <!-- merging test files -->
    <CreateItem Include="$(TestResultsDirectory)\*_xunit.xml">
      <Output TaskParameter="Include"
              ItemName="XmlTestFiles" />
    </CreateItem>
    <Xunit.Runner.MSBuild.CombineXunitXml InputFiles="@(XmlTestFiles)"
                                          OutputFile="$(TestResultsDirectory)\Combined.xml" />
    <Delete Files="@(XmlTestFiles)" />
    <!-- deleting the combined xml file as it isn't being used -->
    <RemoveDir Directories="$(TestResultsDirectory)"
               Condition="Exists('$(TestResultsDirectory)')" />
  </Target>

</Project>