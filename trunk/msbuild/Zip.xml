<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PublishDirectory>$(MSBuildProjectDirectory)\Publish</PublishDirectory>
    <ZipDirectory>$(MSBuildProjectDirectory)\zip</ZipDirectory>
  </PropertyGroup>
  <Target Name="Zip">
    <RemoveDir Directories="$(PublishDirectory)" Condition="Exists('$(PublishDirectory)')" />
    <MakeDir Directories="$(PublishDirectory)\Zip" Condition="!Exists('$(PublishDirectory)\Zip')" />
    <CallTarget Targets="Zip Build" />
    <CallTarget Targets="Zip Commands" />
    <CallTarget Targets="Zip Core" />
    <CallTarget Targets="Zip Diagnostics Log4Net" />
    <CallTarget Targets="Zip Domain" />
    <!--<CallTarget Targets="Zip HTTP Client" />-->
    <CallTarget Targets="Zip Repository" />
    <CallTarget Targets="Zip Repository File System" />
    <CallTarget Targets="Zip Transactions" />
    <CallTarget Targets="Zip Unit Testing" />
    <CallTarget Targets="Zip Autofac Package" />
    <CallTarget Targets="Zip Castle Windsor Package" />
    <CallTarget Targets="Zip StructureMap Package" />
    <CallTarget Targets="Zip Unity Package" />
    <CallTarget Targets="Publish Source to Zip Folder" />
    <CallTarget Targets="Publish Binaries to Zip Folder" />
  </Target>
  <Target Name="Zip Build">
    <MakeDir Directories="$(PublishDirectory)\Build"
             Condition="!Exists('$(PublishDirectory)\Build')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Build\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Build"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <BuildFiles Include="$(PublishDirectory)\Build\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(BuildFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Build"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Build.zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Commands" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Commands"
             Condition="!Exists('$(PublishDirectory)\Commands')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Commands\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Commands"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <CommandsFiles Include="$(PublishDirectory)\Commands\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(CommandsFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Commands"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Commands.zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Core">
    <MakeDir Directories="$(PublishDirectory)\Core"
             Condition="!Exists('$(PublishDirectory)\Core')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Core\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Core"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <CoreFiles Include="$(PublishDirectory)\Core\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(CoreFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Core"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Core.zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Diagnostics Log4Net" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Diagnostics.Log4Net"
             Condition="!Exists('$(PublishDirectory)\Diagnostics.Log4Net')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Diagnostics.Log4Net\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Diagnostics.Log4Net"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <DiagnosticsLog4NetFiles Include="$(PublishDirectory)\Diagnostics.Log4Net\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(DiagnosticsLog4NetFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Diagnostics.Log4Net"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Diagnostics (log4net).zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Domain" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Domain"
             Condition="!Exists('$(PublishDirectory)\Domain')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Domain\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Domain"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <DomainFiles Include="$(PublishDirectory)\Domain\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(DomainFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Domain"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Domain.zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip HTTP Client" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Http.Client"
             Condition="!Exists('$(PublishDirectory)\Http.Client')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Http.Client\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Http.Client"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <HttpClientFiles Include="$(PublishDirectory)\Http.Client\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(HttpClientFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Http.Client"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity HTTP Client.zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Repository" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Repository"
             Condition="!Exists('$(PublishDirectory)\Repository')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Testing.Repository\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Repository"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Repository.FileSystem\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Repository"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <RepositoryFiles Include="$(PublishDirectory)\Repository\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(RepositoryFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Repository"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Repository.zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Repository File System" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Repository.FileSystem"
             Condition="!Exists('$(PublishDirectory)\Repository.FileSystem')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Repository.FileSystem\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Repository.FileSystem"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <RepositoryFileSystemFiles Include="$(PublishDirectory)\Repository.FileSystem\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(RepositoryFileSystemFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Repository.FileSystem"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Repository (File System).zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Transactions" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Transactions"
             Condition="!Exists('$(PublishDirectory)\Transactions')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Transactions\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Transactions"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <TransactionsFiles Include="$(PublishDirectory)\Transactions\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(TransactionsFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Transactions"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Transactions.zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Unit Testing" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Testing.Unit"
             Condition="!Exists('$(PublishDirectory)\Testing.Unit')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ClassLibrariesPath)\Testing.Unit\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Testing.Unit"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj"
                                      ExcludeFiles="*.pdb;*.xml;*.stylecop;*CodeAnalysis*"
                                      NoJobHeader="true" />
    <ItemGroup>
      <UnitTestingFiles Include="$(PublishDirectory)\Testing.Unit\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(UnitTestingFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Testing.Unit"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Unit Testing.zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Autofac Package" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Autofac"
             Condition="!Exists('$(PublishDirectory)\Autofac')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ConsoleApplicationsPath)\Example.Autofac.Console\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Autofac"
                                      Mirror="true"
                                      ExcludeFolders=""
                                      ExcludeFiles="*.pdb;*.exe;*.xml;*.lastcodeanalysissucceeded;Example.dll"
                                      NoJobHeader="true" />
    <Exec Command="RENAME Example.Autofac.Console.exe.config app.config"
          WorkingDirectory="$(PublishDirectory)\Autofac" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\Autofac\app.config"
                                       XPath="/configuration/startup"
                                       Delete="true" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\Autofac\autofac.config"
                                       XPath="/autofac/@defaultAssembly"
                                       Value="" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\Autofac\autofac.config"
                                       XPath="/autofac/components/component"
                                       Delete="true" />
    <ItemGroup>
      <AutofacFiles Include="$(PublishDirectory)\Autofac\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(AutofacFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Autofac"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Service Location (Autofac).zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Castle Windsor Package" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\CastleWindsor"
             Condition="!Exists('$(PublishDirectory)\CastleWindsor')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ConsoleApplicationsPath)\Example.CastleWindsor.Console\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\CastleWindsor"
                                      Mirror="true"
                                      ExcludeFolders=""
                                      ExcludeFiles="*.pdb;*.exe;*.xml;*.lastcodeanalysissucceeded;Example.dll"
                                      NoJobHeader="true" />
    <Exec Command="RENAME Example.CastleWindsor.Console.exe.config app.config"
          WorkingDirectory="$(PublishDirectory)\CastleWindsor" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\CastleWindsor\app.config"
                                       XPath="/configuration/startup"
                                       Delete="true" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\CastleWindsor\castle.config"
                                       XPath="/castle/components/component"
                                       Delete="true" />
    <ItemGroup>
      <CastleWindsorFiles Include="$(PublishDirectory)\CastleWindsor\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(CastleWindsorFiles)"
                                 WorkingDirectory="$(PublishDirectory)\CastleWindsor"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Service Location (Castle Windsor).zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip StructureMap Package" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\StructureMap"
             Condition="!Exists('$(PublishDirectory)\StructureMap')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ConsoleApplicationsPath)\Example.StructureMap.Console\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\StructureMap"
                                      Mirror="true"
                                      ExcludeFolders=""
                                      ExcludeFiles="*.pdb;*.exe;*.xml;*.lastcodeanalysissucceeded;Example.dll"
                                      NoJobHeader="true" />
    <Exec Command="RENAME Example.StructureMap.Console.exe.config app.config"
          WorkingDirectory="$(PublishDirectory)\StructureMap" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\StructureMap\app.config"
                                       XPath="/configuration/startup"
                                       Delete="true" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\StructureMap\StructureMap.config"
                                       XPath="/StructureMap/DefaultInstance"
                                       Delete="true" />
    <ItemGroup>
      <StructureMapFiles Include="$(PublishDirectory)\StructureMap\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(StructureMapFiles)"
                                 WorkingDirectory="$(PublishDirectory)\StructureMap"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Service Location (StructureMap).zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Zip Unity Package" Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <MakeDir Directories="$(PublishDirectory)\Unity"
             Condition="!Exists('$(PublishDirectory)\Unity')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(ConsoleApplicationsPath)\Example.Unity.Console\bin\$(BuildName)"
                                      DestinationFolder="$(PublishDirectory)\Unity"
                                      Mirror="true"
                                      ExcludeFolders=""
                                      ExcludeFiles="*.pdb;*.exe;*.xml;*.lastcodeanalysissucceeded;Example.dll"
                                      NoJobHeader="true" />
    <Exec Command="RENAME Example.Unity.Console.exe.config app.config"
          WorkingDirectory="$(PublishDirectory)\Unity" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\Unity\app.config"
                                       XPath="/configuration/startup"
                                       Delete="true" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\Unity\unity.config"
                                       XPath="/unity/typeAliases/typeAlias[@alias='ITest']"
                                       Delete="true" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\Unity\unity.config"
                                       XPath="/unity/typeAliases/typeAlias[@alias='Tester']"
                                       Delete="true" />
    <MSBuild.Community.Tasks.XmlUpdate XmlFileName="$(PublishDirectory)\Unity\unity.config"
                                       XPath="/unity/containers/container"
                                       Delete="true" />
    <ItemGroup>
      <UnityFiles Include="$(PublishDirectory)\Unity\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(UnityFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Unity"
                                 ZipFileName="$(PublishDirectory)\Binaries\Cavity Service Location (Unity).zip"
                                 ZipLevel="9" />
  </Target>
  <Target Name="Publish Source to Zip Folder" Condition=" '$(TargetFrameworkVersion)' == 'v4.0' ">
    <MakeDir Directories="$(PublishDirectory)\Source" Condition="!Exists('$(PublishDirectory)\Source')" />
    <MSBuild.Community.Tasks.RoboCopy SourceFolder="$(MSBuildProjectDirectory)\src"
                                      DestinationFolder="$(PublishDirectory)\Source"
                                      Mirror="true"
                                      ExcludeFolders=".svn;_svn;obj;bin;PrecompiledWeb"
                                      ExcludeFiles="*.suo;*.csproj.user;*.vs10x;StyleCop.Cache"
                                      NoJobHeader="true" />
    <Delete Files="$(ZipDirectory)\Cavity [Source].zip"
            Condition="Exists('$(ZipDirectory)\Cavity [Source].zip')" />
    <ItemGroup>
      <SourceFiles Include="$(PublishDirectory)\Source\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(SourceFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Source"
                                 ZipFileName="$(ZipDirectory)\Cavity [Source].zip"
                                 ZipLevel="9" />
    <RemoveDir Directories="$(PublishDirectory)\Source"
               Condition="Exists('$(PublishDirectory)\Source')" />
  </Target>
  <Target Name="Publish Binaries to Zip Folder">
    <MakeDir Directories="$(ZipDirectory)" Condition="!Exists('$(ZipDirectory)')" />
    <Delete Files="$(ZipDirectory)\Cavity [Framework $(TargetFrameworkVersion)].zip"
            Condition="Exists('$(ZipDirectory)\Cavity [Framework $(TargetFrameworkVersion)].zip')" />
    <ItemGroup>
      <BinariesFiles Include="$(PublishDirectory)\Binaries\**\*.*" />
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(BinariesFiles)"
                                 WorkingDirectory="$(PublishDirectory)\Binaries"
                                 ZipFileName="$(ZipDirectory)\Cavity [Framework $(TargetFrameworkVersion)].zip"
                                 ZipLevel="9" />
    <RemoveDir Directories="$(PublishDirectory)" Condition="Exists('$(PublishDirectory)')" />
  </Target>
</Project>