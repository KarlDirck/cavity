#summary The core Cavity library
#labels Phase-Implementation

== !NuGet Package ==

http://nuget.org/List/Packages/Cavity.Core

== using Cavity ==

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/AbsoluteUri.cs AbsoluteUri]

{{{
var uri = new AbsoluteUri("http://example.com/");
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/AlphaDecimal.cs AlphaDecimal]

{{{
var token = AlphaDecimal.Random();
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/CommentAttribute.cs CommentAttribute]

{{{
[Comment("This is an example")]
class Example
{
    [Comment("Comment on a property")]
    int Foo { get; set; }

    [Comment("Comment on a method")]
    void Bar()
    {
    }
}
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/ComparableObject.cs ComparableObject]

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/DisposableObject.cs DisposableObject]

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/RelativeUri.cs RelativeUri]

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/ValueObject%601.cs ValueObject<T>]

_Extension Methods_

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Char.ExtensionMethods.cs char]

 * `IsWhiteSpace()`

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/DateTime.ExtensionMethods.cs DateTime]

 * `ToFileName()`

 * `ToLocalTime()`

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Generic.ExtensionMethods.cs Generic]

 * `In<T>()`

 * `EqualsOneOf<T>()`

 * `IsBoundedBy<T>()`

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Object.ExtensionMethods.cs object]

 * `ToXmlString()`

 * `XmlSerialize()`

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/String.ExtensionMethods.cs string]

 * `Contains()`

 * `IsNullOrWhiteSpace()`

 * `EndsWithAny()`

 * `EqualsAny()`

 * `FormatWith()`

 * `LevenshteinDistance()`

 * `NormalizeWhiteSpace()`

 * `RemoveAny()`

 * `RemoveAnyDigits()`

 * `RemoveAnyWhiteSpace()`

 * `RemoveDefiniteArticle()`

 * `RemoveFromEnd()`

 * `RemoveFromStart()`

 * `Replace()`

 * `ReplaceAllWith()`

 * `SameIndexesOfEach()`

 * `Split()`

 * `StartsOrEndsWith()`

 * `StartsWithAny()`

 * `ToTitleCase()`

 * `TryToInt32()`

 * `XmlDeserialize<T>()`

== using Cavity.Collections ==

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/KeyStringDictionary.cs KeyStringDictionary]

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/TranslationDictionary%601.cs TranslationDictionary<T>]

_Extension Methods_

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/IEnumerable.ExtensionMethods.cs IEnumerable]

 * `Concat()`

 * `Count()`

 * `IsEmpty()`

 * `ToQueue<T>()`

 * `ToStack<T>()`

== using Cavity.Collections.Generic ==

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/Generic/MultitonCollection%601.cs MultitonCollection<T>]

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/Generic/Tree%601.cs Tree<T>]