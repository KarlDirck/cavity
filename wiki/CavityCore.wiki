#summary The core Cavity library
#labels Phase-Implementation

== !NuGet Package ==

http://nuget.org/List/Packages/Cavity.Core

== using Cavity _[http://code.google.com/p/cavity/source/browse/#svn%2Ftrunk%2Fsrc%2FCavity%20Core%2FClass%20Libraries%2FCore.Facts Facts]_ ==

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/AbsoluteUri.cs AbsoluteUri] 

{{{
AbsoluteUri uri = "http://example.com";
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/AlphaDecimal.cs AlphaDecimal]

{{{
var token = AlphaDecimal.Random();
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/CommentAttribute.cs CommentAttribute]

{{{
[Comment("Comment on a class")]
class Example
{
    [Comment("Comment on a property")]
    int Foo { get; set; }

    [Comment("Comment on a method")]
    void Bar()
    {
    }
}
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/ComparableObject.cs ComparableObject]

{{{
class Example : ComparableObject
{
    public int Value { get; set; }

    public override string ToString()
    {
        return Value.ToString();
    }
}
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/DisposableObject.cs DisposableObject]

{{{
class Example : DisposableObject
{
    protected override void OnDispose()
    {
        // dispose unmanaged resources
    }
}
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/RelativeUri.cs RelativeUri]

{{{
RelativeUri uri = "/index.html";
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/ValueObject%601.cs ValueObject<T>]

{{{
class Example : ValueObject<Example>
{
    public Example()
    {
        RegisterProperty(x => x.Value);
    }

    public int Value { get; set; }
}
}}}

_Extension Methods_

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Char.ExtensionMethods.cs char]

 * `IsWhiteSpace()`

{{{
if (' '.IsWhiteSpace())
{
}
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/DateTime.ExtensionMethods.cs DateTime]

 * `ToFileName()`

{{{
var file = new FileInfo(DateTime.UtcNow.ToFileName());
}}}

 * `ToLocalTime()`

{{{
var pst = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");

DateTime local = DateTime.UtcNow.ToLocalTime(pst);
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Generic.ExtensionMethods.cs Generic]

 * `In<T>()`

{{{
if ('a'.In('a', 'b', 'c'))
{
}
}}}

 * `EqualsOneOf<T>()`

{{{
if (0.EqualsOneOf(1, 2, 3))
{
}
}}}

 * `IsBoundedBy<T>()`

{{{
if (2.IsBoundedBy(1, 3))
{
}
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Object.ExtensionMethods.cs object]

 * `ToXmlString()`

{{{
string value = DateTime.UtcNow.ToXmlString();
}}}

 * `XmlSerialize()`

{{{
IXPathNavigable xml = new Example().XmlSerialize();
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/String.ExtensionMethods.cs string]

 * `Contains()`

{{{
if ("abc".Contains("B", StringComparison.OrdinalIgnoreCase))
{
}
}}}

 * `IsNullOrWhiteSpace()`

{{{
if ("  ".IsNullOrWhiteSpace())
{
}
}}}

 * `EndsWithAny()`

{{{
if ("example".EndsWithAny(StringComparison.OrdinalIgnoreCase, "this", "or", "that"))
{
}
}}}

 * `EqualsAny()`

{{{
if ("fish".EqualsAny(StringComparison.Ordinal, "cat", "dog"))
{
}
}}}

 * `FormatWith()`

{{{
string value = "{0:0,0} units of {1} sold.".FormatWith(12345, "stuff");
}}}

 * `LevenshteinDistance()`

{{{
if (2 > "Ant".LevenshteinDistance("Aunt"))
{
}
}}}

 * `NormalizeWhiteSpace()`

{{{
var nbsp = '\u00A0'.ToString(); // No-Break Space

string space = nbsp.NormalizeWhiteSpace();
}}}

 * `RemoveAny()`

{{{
string value = "a.b,c".RemoveAny('.', ',');
}}}

 * `RemoveAnyDigits()`

{{{
string value = "a01234b56789c".RemoveAnyDigits();
}}}

 * `RemoveAnyWhiteSpace()`

{{{
string value = "e x a m p l e".RemoveAnyWhiteSpace();
}}}

 * `RemoveDefiniteArticle()`

{{{
string value = "The Example".RemoveDefiniteArticle();
}}}

 * `RemoveFromEnd()`

{{{
string value = "Smith, Mr.".RemoveFromEnd(", Mr.", StringComparison.Ordinal);
}}}

 * `RemoveFromStart()`

{{{
string value = "+4402012341234".RemoveFromStart("+44", StringComparison.Ordinal);
}}}

 * `Replace()`

{{{
string value = "a to b to c".Replace("->", " to ", StringComparison.OrdinalIgnoreCase);
}}}

 * `ReplaceAllWith()`

{{{
string value = "Mr Smith".ReplaceAllWith("Mr.", StringComparison.OrdinalIgnoreCase, "Mr", "Mister");
}}}

 * `SameIndexesOfEach()`

{{{
if ("Abba".SameIndexesOfEach('A', 'a'))
{
}
}}}

 * `Split()`

{{{
string[] value = "a;;b".Split(';', StringSplitOptions.RemoveEmptyEntries);
}}}

 * `StartsOrEndsWith()`

{{{
if ("Abba".StartsOrEndsWith('A', 'z'))
{
}
}}}

 * `StartsWithAny()`

{{{
if ("Mr. Smith".StartsWithAny(StringComparison.Ordinal, "Mr.", "Mrs.", "Miss", "Ms"))
{
}
}}}

 * `ToTitleCase()`

{{{
string value = "an example".ToTitleCase();
}}}

 * `TryToInt32()`

{{{
int? value = "123".TryToInt32();
}}}

 * `XmlDeserialize<T>()`

{{{
var value = "<example />".XmlDeserialize<Example>();
}}}

== using Cavity.Collections _[http://code.google.com/p/cavity/source/browse/#svn%2Ftrunk%2Fsrc%2FCavity%20Core%2FClass%20Libraries%2FCore.Facts%2FCollections Facts]_ ==

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/KeyStringDictionary.cs KeyStringDictionary]

{{{
var dictionary = new KeyStringDictionary
{
    new KeyStringPair("key", "value")
};
}}}

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/TranslationDictionary%601.cs TranslationDictionary<T>]

{{{
var translations = new TranslationDictionary<string>
{
    new Translation<string>("Autumn", "en-GB"),
    new Translation<string>("Fall", "en-US"),
    new Translation<string>("l'Automne", "fr-FR")
};

string value = translations[Thread.CurrentThread.CurrentUICulture];
}}}

_Extension Methods_

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/IEnumerable.ExtensionMethods.cs IEnumerable]

 * `Concat()`

 * `Count()`

 * `IsEmpty()`

 * `ToQueue<T>()`

 * `ToStack<T>()`

== using Cavity.Collections.Generic ==

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/Generic/MultitonCollection%601.cs MultitonCollection<T>]

[http://code.google.com/p/cavity/source/browse/trunk/src/Cavity%20Core/Class%20Libraries/Core/Collections/Generic/Tree%601.cs Tree<T>]