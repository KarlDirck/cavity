#summary Guide to asserting expectations about properties.
#labels Phase-Implementation

* Asserting an auto-implemented property *

{{{
        [Fact]
        public void value_definition()
        {
            Assert.True(new PropertyExpectations<Class1>(x => x.Value)
                .IsAutoProperty<string>()
                .Result);
        }
}}}

* Asserting an auto-implemented property with a custom default value *

{{{
        [Fact]
        public void value_definition()
        {
            Assert.True(new PropertyExpectations<Class1>(x => x.Value)
                .IsAutoProperty<string>("default")
                .Result);
        }
}}}

* Asserting an auto-implemented property decorated with [XmlAttribute("value")] *

{{{
        [Fact]
        public void value_definition()
        {
            Assert.True(new PropertyExpectations<Class1>(x => x.Value)
                .IsAutoProperty<string>()
                .XmlAttribute("attribute")
                .Result);
        }
}}}

* Asserting a validated property *

{{{
        [Fact]
        public void value_definition()
        {
            Assert.True(new PropertyExpectations<Class1>(x => x.Value)
                .TypeIs<string>()
                .DefaultValueIs("default")
                .Set("example")
                .ArgumentNullException()
                .ArgumentOutOfRangeException(string.Empty)
                .FormatException("invalid")
                .IsNotDecorated()
                .Result);
        }
}}}