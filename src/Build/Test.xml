<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <TestResultsDirectory>$(MSBuildProjectDirectory)\TestResults</TestResultsDirectory>
    <ClassLibrariesPath>$(MSBuildProjectDirectory)\src\ClassLibraries</ClassLibrariesPath>
    <ConsoleApplicationsPath>$(MSBuildProjectDirectory)\src\ConsoleApplications</ConsoleApplicationsPath>
  </PropertyGroup>

  <Target Name="Test"
          Condition=" '$(TargetFrameworkVersion)' != 'v2.0' ">
    <RemoveDir Directories="$(TestResultsDirectory)"
               Condition="Exists('$(TestResultsDirectory)')" />
    <MakeDir Directories="$(TestResultsDirectory)"
             Condition="!Exists('$(TestResultsDirectory)')" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Build.Tasks.Facts\bin\$(BuildName)\Cavity.Build.Tasks.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Build.Tasks.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\build_tasks_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Core.Facts\bin\$(BuildName)\Cavity.Core.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Core.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\core_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Domain.Facts\bin\$(BuildName)\Cavity.Domain.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Domain.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\domain_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Http.Client.Facts\bin\$(BuildName)\Cavity.Http.Client.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Http.Client.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\http_client_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.Facts\bin\$(BuildName)\Cavity.ServiceLocation.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.Autofac.Facts\bin\$(BuildName)\Cavity.ServiceLocation.Autofac.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.Autofac.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_autofac_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.CastleWindsor.Facts\bin\$(BuildName)\Cavity.ServiceLocation.CastleWindsor.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.CastleWindsor.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_castle_windsor_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.StructureMap.Facts\bin\$(BuildName)\Cavity.ServiceLocation.StructureMap.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.StructureMap.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_structuremap_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\ServiceLocation.Unity.Facts\bin\$(BuildName)\Cavity.ServiceLocation.Unity.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\ServiceLocation.Unity.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\service_location_unity_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Testing.Http.Facts\bin\$(BuildName)\Cavity.Testing.Http.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Testing.Http.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\testing_http_facts_xunit.xml" />
    <Xunit.Runner.MSBuild.xunit ContinueOnError="false"
                                Assembly="$(ClassLibrariesPath)\Testing.Unit.Facts\bin\$(BuildName)\Cavity.Testing.Unit.Facts.dll"
                                WorkingFolder="$(ClassLibrariesPath)\Testing.Unit.Facts\bin\$(BuildName)"
                                Xml="$(TestResultsDirectory)\testing_unit_facts_xunit.xml" />
    <Exec Command="Example.Autofac.Console.exe"
          WorkingDirectory="$(ConsoleApplicationsPath)\Example.Autofac.Console\bin\$(BuildName)" />
    <Exec Command="Example.CastleWindsor.Console.exe"
          WorkingDirectory="$(ConsoleApplicationsPath)\Example.CastleWindsor.Console\bin\$(BuildName)" />
    <Exec Command="Example.StructureMap.Console.exe"
          WorkingDirectory="$(ConsoleApplicationsPath)\Example.StructureMap.Console\bin\$(BuildName)" />
    <Exec Command="Example.Unity.Console.exe"
          WorkingDirectory="$(ConsoleApplicationsPath)\Example.Unity.Console\bin\$(BuildName)" />
    <!-- merging test files -->
    <CreateItem Include="$(TestResultsDirectory)\*_xunit.xml">
      <Output TaskParameter="Include"
              ItemName="XmlTestFiles" />
    </CreateItem>
    <Xunit.Runner.MSBuild.CombineXunitXml InputFiles="@(XmlTestFiles)"
                                          OutputFile="$(TestResultsDirectory)\Combined.xml" />
    <Delete Files="@(XmlTestFiles)" />
    <!-- deleting the combined xml file as it isn't being used -->
    <RemoveDir Directories="$(TestResultsDirectory)"
               Condition="Exists('$(TestResultsDirectory)')" />
  </Target>

</Project>